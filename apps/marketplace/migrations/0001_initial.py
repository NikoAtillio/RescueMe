# Generated by Django 4.2.17 on 2025-03-21 16:11

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='LivingRequirement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='Unnamed Requirement', max_length=100)),
                ('description', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='RescueCentre',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='Unnamed Centre', max_length=200)),
                ('description', models.TextField(default='No description provided')),
                ('rescue_type', models.CharField(choices=[('ALL', 'All Animals'), ('DOG', 'Dogs Only'), ('CAT', 'Cats Only'), ('HORSE', 'Horses/Farm Animals'), ('EXOTIC', 'Exotic Animals'), ('WILDLIFE', 'Wildlife')], default='ALL', max_length=50)),
                ('services', models.CharField(choices=[('ADOPTION', 'Adoption Services'), ('FOSTERING', 'Fostering Program'), ('REHABILITATION', 'Rehabilitation'), ('TRAINING', 'Training Services'), ('MEDICAL', 'Medical Services'), ('BOARDING', 'Boarding Services'), ('BEHAVIOR', 'Behavioral Support'), ('TRANSPORT', 'Transport Services')], default='ADOPTION', max_length=50)),
                ('facilities', models.CharField(choices=[('KENNEL', 'Kennel Facilities'), ('CATTERY', 'Cattery'), ('STABLES', 'Stables'), ('VET', 'Veterinary Clinic'), ('TRAINING', 'Training Facilities'), ('REHAB', 'Rehabilitation Centre')], default='KENNEL', max_length=50)),
                ('address', models.TextField(default='Address pending')),
                ('postcode', models.CharField(default='Unknown', max_length=10)),
                ('phone', models.CharField(default='TBD', max_length=20)),
                ('email', models.EmailField(default='pending@example.com', max_length=254)),
                ('website', models.URLField(blank=True)),
                ('latitude', models.DecimalField(decimal_places=6, default=0, max_digits=9)),
                ('longitude', models.DecimalField(decimal_places=6, default=0, max_digits=9)),
                ('transport_radius', models.CharField(choices=[('LOCAL', 'Local (up to 10 miles)'), ('REGIONAL', 'Regional (up to 50 miles)'), ('NATIONAL', 'National'), ('INTERNATIONAL', 'International')], default='LOCAL', max_length=50)),
                ('foster_network', models.CharField(choices=[('ACTIVE', 'Active Foster Network'), ('LIMITED', 'Limited Foster Network'), ('NEEDED', 'Foster Homes Needed'), ('NONE', 'No Foster Network')], default='NONE', max_length=50)),
                ('emergency_intake', models.CharField(choices=[('24_7', '24/7 Emergency Intake'), ('LIMITED', 'Limited Emergency Intake'), ('SCHEDULED', 'Scheduled Intake Only'), ('NONE', 'No Emergency Intake')], default='SCHEDULED', max_length=50)),
                ('home_check_radius', models.IntegerField(default=20, help_text='Maximum distance (in miles) for home checks', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(500)])),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='SpecialNeed',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='Unnamed Need', max_length=100)),
                ('description', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='Unnamed Contact', max_length=100)),
                ('phone_number', models.CharField(default='No phone provided', max_length=50)),
                ('email', models.CharField(default='no.email@example.com', max_length=100)),
                ('rescue_centre', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='marketplace.rescuecentre')),
            ],
        ),
        migrations.CreateModel(
            name='Animal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='Unnamed', max_length=100)),
                ('species', models.CharField(choices=[('DOG', 'Dog'), ('CAT', 'Cat'), ('RABBIT', 'Rabbit'), ('HORSE', 'Horse'), ('BIRD', 'Bird'), ('SMALL_ANIMAL', 'Small Animal')], default='DOG', max_length=50)),
                ('breed', models.CharField(default='Unknown', max_length=100)),
                ('age_category', models.CharField(choices=[('BABY', 'Baby (0-1 year)'), ('YOUNG', 'Young (1-3 years)'), ('ADULT', 'Adult (3-8 years)'), ('SENIOR', 'Senior (8+ years)')], default='ADULT', max_length=50)),
                ('size', models.CharField(choices=[('XS', 'Extra Small'), ('S', 'Small'), ('M', 'Medium'), ('L', 'Large'), ('XL', 'Extra Large')], default='M', max_length=50)),
                ('description', models.TextField(default='No description provided')),
                ('energy_level', models.CharField(choices=[('LOW', 'Low Energy'), ('MODERATE', 'Moderate Energy'), ('HIGH', 'High Energy'), ('VERY_HIGH', 'Very High Energy')], default='MODERATE', max_length=50)),
                ('training_level', models.CharField(choices=[('NONE', 'No Training'), ('BASIC', 'Basic Training'), ('INTERMEDIATE', 'Intermediate Training'), ('ADVANCED', 'Advanced Training')], default='BASIC', max_length=50)),
                ('reactivity', models.CharField(blank=True, choices=[('DOG_FRIENDLY', 'Good with Dogs'), ('CAT_FRIENDLY', 'Good with Cats'), ('CHILD_FRIENDLY', 'Good with Children'), ('STRANGER_FRIENDLY', 'Good with Strangers'), ('LEASH_REACTIVE', 'Leash Reactive'), ('RESOURCE_GUARD', 'Resource Guards')], default='DOG_FRIENDLY', max_length=50)),
                ('latitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('postcode', models.CharField(default='Unknown', max_length=10)),
                ('adoption_fee', models.CharField(choices=[('FREE', 'Free'), ('LOW', '£1-£100'), ('MEDIUM', '£101-£250'), ('HIGH', '£251-£500'), ('PREMIUM', '£500+')], default='LOW', max_length=50)),
                ('home_check', models.CharField(choices=[('REQUIRED', 'Home Check Required'), ('VIRTUAL', 'Virtual Home Check Accepted'), ('COMPLETED', 'Home Check Completed'), ('NOT_REQUIRED', 'No Home Check Required')], default='REQUIRED', max_length=50)),
                ('transport_available', models.CharField(choices=[('PROVIDED', 'Transport Available'), ('LOCAL_ONLY', 'Local Collection Only'), ('ARRANGED', 'Transport Can Be Arranged'), ('NOT_AVAILABLE', 'No Transport Available')], default='LOCAL_ONLY', max_length=50)),
                ('urgency_status', models.CharField(choices=[('EMERGENCY', 'Emergency - Immediate Placement Needed'), ('URGENT', 'Urgent - Within 7 Days'), ('SOON', 'Soon - Within 30 Days'), ('STANDARD', 'Standard - No Immediate Rush')], default='STANDARD', max_length=50)),
                ('foster_status', models.CharField(choices=[('NEEDED', 'Foster Home Needed'), ('TEMP', 'Temporary Foster Only'), ('LONG_TERM', 'Long-term Foster Needed'), ('NOT_NEEDED', 'Foster Not Required')], default='NOT_NEEDED', max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_available', models.BooleanField(default=True)),
                ('living_requirements', models.ManyToManyField(blank=True, to='marketplace.livingrequirement')),
                ('special_needs', models.ManyToManyField(blank=True, to='marketplace.specialneed')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
    ]
